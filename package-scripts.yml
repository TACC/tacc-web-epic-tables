scripts:
  # Delete then create output directory
  setup: rm -rf ./dist && shx mkdir -p ./dist

  # Build temporary partial templates, then build final markup (and styles)
  build: nps build:data build:markup build:styles

  # Build temporary data from source data
    # FAQ:     Prefix temporary data with underscore, to identify them
    #          as temporary (also, add underscore pattern to `.gitignore`)
    # Via `csvtojson` convert data from `.csv` to `.json`
  build:data: nps build:data:presentations
  build:data:presentations: >-
    csvtojson
    --noheader=false
    --headers='[
      "timestamp",
      "submitter",
      "webpage",
      "name",
      "date",
      "place",
      "authors",
      "link"
    ]'
    assets/presentations.csv > assets/_presentations.json

  # Build final markup
    # Build all (`nps build:…`)
    # Import partial template(s) (`-p ….mustache`)
    # Apply data into template, then ouput to… (`….json ….mustache >`)
    # Final markup file (`….html`)
  build:markup: >-
    nps build:markup:presentations:research
    && nps build:markup:presentations:weteachcs
  build:markup:presentations:research: >-
    mustache
    ./bin/manipulate-for-research.js ./templates/presentations.mustache >
    ./dist/presentations-for-research.html
  build:markup:presentations:weteachcs: >-
    mustache
    ./bin/manipulate-for-weteachcs.js ./templates/presentations.mustache >
    ./dist/presentations-for-weteachcs.html

  # "Build" (really, just output) final styles
    # Import partial template(s) (`-p ….mustache`)
    # Apply data into template, then ouput to… (`….json ….mustache >`)
    # Final markup file (`….html`)
  build:styles: >-
    mustache
    -p ./templates/partials/styles.mustache
    ./assets/_presentations.json ./templates/styles.mustache >
    ./dist/styles.html

  report: echo "Copy relevant markup from './dist/___.html"

  # Delete temporary files
  clean: rm ./assets/_*.*
